type Query {
    info: ServerInfo!,
    guild(id: Int!): Guild,
}

type ServerInfo {
    version: Semver!,
    contributors: [Contributor!],
    repository: String!,
    status: BotStatus,

    contributor(nickname: String): Contributor,
}

type Contributor {
    avatar: String!,
    nickname: String!,
    name: String
}

type Semver {
    string: String!,
    major: Int!,
    minor: Int!,
    path: Int!,
    channel: UpdateChannel!
}

type User {
    id: String!,
    nickname: String!,
    tag: String!,
    guilds: [Guild!]!,

    guild(id: Int!): Guild
}

type Channel {
    id: String!,
    position: Int,
    guild: Guild,
    type: ChannelType!,

    messages: [Message!],
    message(id: Int!): Message,
}

type Guild {
    id: String!,
    owner: User,
    channels: [Channel!]!,
    users: [User!]!,
    settings: GuildSettings,

    channel(id: Int!): Channel,
    user(id: Int!): User
}

type GuildSettings {
    allowedChannels: [Channel!],
    cases: [Case!]!,
    disabledCommands: [Command!]!,
}

type Command {
    name: String!,
    group: String!,
    description: String!,
    aliases: [String!]!,
    usage: String,

    arguments: [Argument!]!
}

type Argument {
    type: String!,
    prompt: String!,
    default: String,
    key: String!,
    infinite: Boolean!
}

type Case {
    mod: SimpleUser!,
    user: SimpleUser!,
    reason: String!,
    deleted: Boolean!,
}

type SimpleUser {
    user: User,
    id: Int!,
    name: String!
}

type Message {
    id: String!,
    author: User,
    webhook: Boolean!,
    channel: Channel!,
    guild: Guild,
    content: String!,
    reactions: [String!],
    embeds: [Embed!],
}

type Embed {
    message: Message,
    author: User,
    channel: Channel,

    title: String,
    description: String,
    embedAuthor: EmbedAuthor!,
    fields: [EmbedField!]!,
    footer: String,
    thumbnail: String,
    image: String
}

type EmbedField {
    title: String!,
    content: String!,
    inline: Boolean!,
}

type EmbedAuthor {
    link: String,
    name: String,
    avatar: String
}


enum ChannelType {
    DM,
    Text,
    Voice,
    Video,
    News
}

enum BotStatus {
    offline,
    running,
    updating
}

enum UpdateChannel {
    alpha,
    beta,
    release
}

schema {
    query: Query
}
